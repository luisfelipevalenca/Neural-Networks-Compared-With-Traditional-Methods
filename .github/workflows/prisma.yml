# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow that checks for security issues using
# the Prisma Cloud Infrastructure as Code Scan Action on
# the IaC files present in the repository.
# The results are uploaded to GitHub Security Code Scanning
#
# For more details on the Action configuration see https://github.com/prisma-cloud-shiftleft/iac-scan-action

name: Prisma Cloud IaC Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '25 18 * * 6'

permissions:
  contents: read

jobs:
  prisma_cloud_iac_scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    name: Run Prisma Cloud IaC Scan to check
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - id: iac-scan
        name: Run Scan on CFT files in the repository
        uses: prisma-cloud-shiftleft/iac-scan-action@53278c231c438216d99b463308a3cbed351ba0c3
        with:
          prisma_api_url: https://api.prismacloud.io
          access_key: ${{ secrets.PRISMA_ACCESS_KEY }}
          secret_key: ${{ secrets.PRISMA_SECRET_KEY }}
          asset_name: 'my-asset-name'
          template_type: 'CFT'
      - name: Upload scan result artifact
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: iac_scan_result
          path: ${{ steps.iac-scan.outputs.iac_scan_result_path }}

      # Custom retry logic for the Prisma Cloud IaC Scan step
      - name: Retry on failure
        if: failure()
        run: |
          for i in {1..3}; do
            echo "Retrying Prisma Cloud IaC Scan... Attempt $i"
            # Trigger the scan again
            # Exponential backoff (wait for 5 seconds on the first retry, then 10 seconds, and so on)
            sleep $((5 * i))
            # Exit the loop if the command succeeds
            if ./run_scan.sh; then
              echo "Scan succeeded on attempt $i"
              break
            fi
          done
